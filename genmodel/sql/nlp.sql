
/* NLP JOBS OBJECT STORE */
CREATE TABLE IF NOT EXISTS nlpjobs (
  id serial PRIMARY KEY NOT NULL,
  data jsonb, -- info about the job
  created timestamp with time zone default now(),
  updated timestamp with time zone default now()
);

/* NLP DATA OBJECT STORE */
CREATE TABLE IF NOT EXISTS nlpdata (
  id serial PRIMARY KEY NOT NULL,
  setname varchar, -- set this belongs to, ie, reuters-sentences (can be autogenerated too)
  typename varchar, -- type of object in this set, ie, sva-reduction or sentence
  generator int, -- job id of the job that generated this object if applicaple
  data jsonb, -- arbitrary json
  created timestamp with time zone default now(),
  updated timestamp with time zone default now()
);

CREATE FUNCTION row_updated() RETURNS TRIGGER
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.updated := current_date;
  RETURN NEW;
END;
$$;

CREATE TRIGGER trigger_nlpjob_update
  BEFORE UPDATE ON nlpjobs
  FOR EACH ROW
  EXECUTE PROCEDURE row_updated();

CREATE TRIGGER trigger_nlpdata_update
  BEFORE UPDATE ON nlpdata
  FOR EACH ROW
  EXECUTE PROCEDURE row_updated();

